import pandas as pd
import numpy as np

def FillEmptyCoordinates(month_base_range_base_max_rate):
    """
    Objective:
    Fill in empty coordinates in the DataFrame by creating all combinations of latitude and longitude.

    Parameters:
    month_base_range_base_max_rate (DataFrame): DataFrame containing coodinate base monthly max generation ratios.

    Returns:
    month_base_range_base_max_rate_w_all_coor (DataFrame): DataFrame containing coodinate base monthly max generation ratios with all latitude and longitude combinations, 
    including filled NaN values with 1.
    """

    # Generate all combinations of latitude and longitude
    lat_range = np.arange(36, 45)
    lon_range = np.arange(26, 48)
    combinations = pd.MultiIndex.from_product([lat_range, lon_range], names=['lat', 'lon'])

    # Reindex the DataFrame with all combinations and fill NaN values with 1
    month_base_range_base_max_rate_w_all_coor = month_base_range_base_max_rate.set_index(['lat', 'lon']).reindex(combinations)
    month_base_range_base_max_rate_w_all_coor = month_base_range_base_max_rate_w_all_coor.fillna(1)

    # Reset the index of the DataFrame for proper formatting
    month_base_range_base_max_rate_w_all_coor.reset_index(drop=False, inplace=True)

    return month_base_range_base_max_rate_w_all_coor

def CoorBaseMaxGenerationRateTableImport():
    """
    Objective:
    Import the given dataset and perform data preparation by filling empty coordinates with default values.
    The ratios were obtained by analyzing the solar generation values in the JRC database and the FOTON database.
    In later versions, this dataset can be pulled from the database.

    Returns:
    month_base_range_base_max_rate_w_all_coor (DataFrame): DataFrame containing solar energy generation max ratios data with filled empty coordinates.
    """

    # Define the given dataset as a list
    month_base_range_base_max_rate_lst = [
            [36.0, 36.0, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000],
            [36.0, 35.0, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000],
            [36.0, 32.0, 1.079738, 1.272305, 1.000000, 1.109189, 1.256895, 1.114061, 1.168415, 1.100690, 1.000000, 1.029490, 1.000000, 1.000000],
            [36.0, 30.0, 1.062797, 1.059252, 1.000000, 1.073221, 1.053622, 1.015656, 1.141753, 1.017770, 1.045553, 1.000000, 1.000000, 1.000000],
            [37.0, 39.0, 1.120329, 1.134267, 1.025970, 1.332438, 1.409279, 1.580303, 1.663534, 1.517823, 1.329129, 1.114185, 1.000000, 1.000000],
            [37.0, 36.0, 1.000000, 1.011203, 1.014040, 1.100552, 1.292199, 1.105240, 1.175961, 1.075284, 1.000000, 1.076758, 1.000000, 1.000000],
            [37.0, 41.0, 1.113407, 1.210646, 1.000000, 1.112900, 1.214771, 1.234040, 1.232824, 1.163799, 1.105406, 1.109276, 1.000000, 1.033537],
            [37.0, 37.0, 1.051604, 1.179951, 1.000000, 1.142865, 1.212343, 1.151501, 3.875732, 1.128372, 1.073319, 1.026173, 1.000000, 1.000000],
            [37.0, 33.0, 1.080948, 1.239557, 1.000000, 1.123600, 1.296732, 1.353184, 1.312257, 1.201989, 1.152467, 1.299030, 1.132575, 1.191600],
            [37.0, 29.0, 1.000000, 1.172563, 1.012653, 1.081247, 1.213121, 1.058334, 1.095996, 1.087105, 1.028172, 1.068836, 1.000000, 1.000000],
            [37.0, 38.0, 1.224544, 1.259673, 1.067331, 1.226226, 1.318438, 1.266345, 1.325763, 1.562825, 1.415570, 1.518722, 1.093162, 1.105486],
            [37.0, 32.0, 1.000000, 1.194724, 1.000000, 1.147147, 1.216127, 1.162621, 1.197292, 1.101003, 1.004193, 1.135333, 1.000000, 1.000000],
            [37.0, 31.0, 1.000000, 1.000000, 1.000000, 1.012296, 1.131248, 1.000000, 1.026194, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000],
            [37.0, 30.0, 1.000000, 1.126165, 1.000000, 1.023434, 1.063113, 1.017468, 1.089874, 1.027777, 1.000000, 1.000000, 1.000000, 1.000000],
            [37.0, 27.0, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000],
            [38.0, 35.0, 1.000000, 1.145168, 1.066972, 1.193201, 1.463042, 1.441761, 1.460206, 1.279327, 1.101257, 1.000000, 1.000000, 1.000000],
            [38.0, 38.0, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.173872, 1.000000, 1.099622, 1.000000, 1.000000],
            [38.0, 27.0, 1.000000, 1.146915, 1.028299, 1.035282, 1.167753, 1.158175, 1.313690, 1.126161, 1.089822, 1.098933, 1.079514, 1.000000],
            [38.0, 34.0, 1.250317, 1.415093, 1.073917, 1.075493, 1.491115, 1.398345, 1.430596, 1.393338, 1.143182, 1.077851, 1.000000, 1.000000],
            [38.0, 33.0, 1.092290, 1.257610, 1.027936, 1.484206, 1.826756, 1.854276, 1.999428, 1.585914, 1.350496, 1.073549, 1.405775, 1.000000],
            [38.0, 29.0, 1.000000, 1.110659, 1.000000, 1.000000, 1.236780, 1.102435, 1.171803, 1.131896, 1.024975, 1.085396, 1.021215, 1.000000],
            [38.0, 31.0, 1.000000, 1.118068, 1.000000, 1.117610, 1.160252, 1.063259, 1.273370, 1.075608, 1.121340, 1.082580, 1.000000, 1.000000],
            [38.0, 26.0, 1.000000, 1.000000, 1.025761, 1.031053, 1.201513, 1.130769, 1.163577, 1.039245, 1.041655, 1.044950, 1.000000, 1.000000],
            [38.0, 32.0, 1.185663, 1.254997, 1.000000, 1.020023, 1.107248, 1.000000, 1.062114, 1.062341, 1.039313, 1.105601, 1.000000, 1.008998],
            [38.0, 37.0, 1.150349, 1.161013, 1.000000, 1.106674, 1.054715, 1.053464, 1.159985, 1.037217, 1.016780, 1.036315, 1.000000, 1.000000],
            [38.0, 28.0, 1.000000, 1.156755, 1.001561, 1.000000, 1.250384, 1.164854, 1.210658, 1.174491, 1.111750, 1.153475, 1.081952, 1.000000],
            [38.0, 42.0, 1.026391, 1.294586, 1.000000, 1.155948, 1.131942, 1.186000, 1.215693, 1.138924, 1.093383, 1.036448, 1.000000, 1.000000],
            [38.0, 30.0, 1.000000, 1.123666, 1.000000, 1.000000, 1.132897, 1.046610, 1.053852, 1.116560, 1.047494, 1.139338, 1.000000, 1.000000],
            [38.0, 41.0, 1.000000, 1.178419, 1.000000, 1.000000, 1.056845, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000],
            [39.0, 27.0, 1.000000, 1.163035, 1.034551, 1.000000, 1.179607, 1.077918, 1.157047, 1.101999, 1.090232, 1.145058, 1.061362, 1.000000],
            [39.0, 35.0, 1.038305, 1.447673, 1.022107, 1.000000, 1.205419, 1.076930, 1.115517, 1.064258, 1.000000, 1.099429, 1.037762, 1.000000],
            [39.0, 29.0, 1.000000, 1.076100, 1.000000, 1.037445, 1.248816, 1.000000, 1.149879, 1.074185, 1.000000, 1.000000, 1.000000, 1.031955],
            [39.0, 37.0, 1.199967, 1.649627, 1.000000, 1.000000, 1.248896, 1.167992, 1.127325, 1.095302, 1.007188, 1.224626, 1.000000, 1.000000],
            [39.0, 32.0, 1.027565, 1.000000, 1.067386, 1.084102, 1.179328, 1.059890, 1.163589, 1.080050, 1.037213, 1.000000, 1.000000, 1.000000],
            [39.0, 30.0, 1.000000, 1.124469, 1.000000, 1.000000, 1.139617, 1.000000, 1.051416, 1.039972, 1.000000, 1.052011, 1.000000, 1.000000],
            [39.0, 40.0, 1.317722, 2.002698, 1.324351, 1.138039, 1.301911, 1.169643, 1.094712, 1.125843, 1.051804, 1.211427, 1.000000, 1.000000],
            [39.0, 33.0, 1.000000, 1.081162, 1.017376, 1.081534, 1.188645, 1.062461, 1.078276, 1.008734, 1.000000, 1.008515, 1.000000, 1.000000],
            [40.0, 41.0, 1.177078, 1.616156, 1.186662, 1.368772, 1.090546, 1.001627, 1.112051, 1.037370, 1.000000, 1.087283, 1.000000, 1.264641],
            [40.0, 33.0, 1.421830, 1.000000, 1.000000, 1.055804, 1.156967, 1.043440, 1.128917, 1.019135, 1.000000, 1.000000, 1.000000, 1.000000],
            [40.0, 28.0, 1.000000, 1.000000, 1.000000, 1.000000, 1.226732, 1.075251, 1.180964, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000],
            [40.0, 29.0, 1.000000, 1.000000, 1.000000, 1.000000, 1.119301, 1.038706, 1.092258, 1.103155, 1.013944, 1.075666, 1.039625, 1.000000],
            [40.0, 30.0, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000],
            [40.0, 26.0, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000],
            [41.0, 28.0, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000],
            [41.0, 27.0, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.045957, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000],
            [41.0, 34.0, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.208751, 1.182896, 1.202520, 1.195639, 1.274970]
    ]

    # Columns represents latitude, longitude, 1:january, 2: february, ... 12:december
    columns = ["lat", "lon", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]

    # Create a DataFrame from the dataset
    month_base_range_base_max_rate = pd.DataFrame(month_base_range_base_max_rate_lst, columns=columns)

    # Fill empty coordinates in the DataFrame with default values (1)
    month_base_range_base_max_rate_w_all_coor = FillEmptyCoordinates(month_base_range_base_max_rate)

    return month_base_range_base_max_rate_w_all_coor


